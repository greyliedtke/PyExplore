"""
file for handling hardware
"""

import time
import random
import neopixel
import board
import math
import rotaryio
from digitalio import DigitalInOut, Direction, Pull
import Tools.Matrix as mat


colors = {
    "light_yellow": (255, 200, 100),
    "Sky_Blue": (135, 206, 235),
    "Mint_Green": (152, 255, 100),
    "Lavender": (230, 230, 250),
    "Peach": (255, 218, 185),
    "Goldenrod": (218, 165, 32),
    "nice_pink": (255, 192, 203),
    "silver": (192, 192, 192),
    "grey": (128, 128, 128),
    "off": (0, 0, 0)
}


# ------------------------------------------------------
# LED Strip
class LED_Strip:
    def __init__(self):
        # bright = 0.025
        bright = 0.045
        self.length = 256
        self.strip = neopixel.NeoPixel(
            board.GP28, self.length, auto_write=False, brightness=bright
        )

    def flash(self, color):
        # print(color)
        self.strip.fill(color)
        self.strip.show()

    def wipe(self):
        self.strip.fill([0, 0, 0])
        self.strip.show()

    def send_array(self, pixel_a, color="Goldenrod", show=True):
        for p in pixel_a:
            self.strip[p] = colors[color]
        if show:
            self.strip.show()

    def send_strip(self, color_array):
        for i, c in enumerate(color_array):
            self.strip[i] = c
        self.strip.show()



led_strip = LED_Strip()

ppp = [[[0, 0], [(0, 183, 239)]], [[1, 0], [(0, 183, 239)]], [[2, 0], [(0, 183, 239)]], [[3, 0], [(0, 183, 239)]], [[4, 0], [(0, 183, 239)]], [[5, 0], [(0, 183, 239)]], [[6, 0], [(0, 183, 239)]], [[7, 0], [(0, 183, 239)]], [[8, 0], [(0, 183, 239)]], [[9, 0], [(0, 183, 239)]], [[10, 0], [(0, 183, 239)]], [[11, 0], [(0, 183, 239)]], [[12, 0], [(0, 183, 239)]], [[13, 0], [(0, 183, 239)]], [[14, 0], [(0, 183, 239)]], [[15, 0], [(0, 183, 239)]], [[0, 1], [(0, 183, 239)]], [[1, 1], [(0, 183, 239)]], [[2, 1], [(0, 183, 239)]], [[3, 1], [(0, 183, 239)]], [[4, 1], [(0, 183, 239)]], [[5, 1], [(0, 183, 239)]], [[6, 1], [(0, 183, 239)]], [[7, 1], [(0, 183, 239)]], [[8, 1], [(0, 183, 239)]], [[9, 1], [(0, 183, 239)]], [[10, 1], [(0, 183, 239)]], [[11, 1], [(0, 183, 239)]], [[12, 1], [(0, 183, 239)]], [[13, 1], [(0, 183, 239)]], [[14, 1], [(0, 183, 239)]], [[15, 1], [(0, 183, 239)]], [[0, 2], [(0, 183, 239)]], [[1, 2], [(0, 183, 239)]], [[2, 2], [(0, 183, 239)]], [[3, 2], [(0, 183, 239)]], [[4, 2], [(0, 183, 239)]], [[5, 2], [(0, 183, 239)]], [[6, 2], [(0, 183, 239)]], [[7, 2], [(0, 183, 239)]], [[8, 2], [(0, 183, 239)]], [[9, 2], [(0, 183, 239)]], [[10, 2], [(0, 183, 239)]], [[11, 2], [(0, 183, 239)]], [[12, 2], [(0, 183, 239)]], [[13, 2], [(0, 183, 239)]], [[14, 2], [(0, 183, 239)]], [[15, 2], [(0, 183, 239)]], [[0, 3], [(0, 183, 239)]], [[1, 3], [(0, 183, 239)]], [[2, 3], [(0, 183, 239)]], [[3, 3], [(0, 183, 239)]], [[4, 3], [(0, 183, 239)]], [[5, 3], [(0, 183, 239)]], [[6, 3], [(0, 183, 239)]], [[7, 3], [(0, 183, 239)]], [[8, 3], [(0, 183, 239)]], [[9, 3], [(0, 183, 239)]], [[10, 3], [(0, 183, 239)]], [[11, 3], [(0, 183, 239)]], [[12, 3], [(0, 183, 239)]], [[13, 3], [(0, 183, 239)]], [[14, 3], [(0, 183, 239)]], [[15, 3], [(0, 183, 239)]], [[0, 4], [(0, 183, 239)]], [[1, 4], [(0, 183, 239)]], [[2, 4], [(0, 183, 239)]], [[3, 4], [(237, 28, 36)]], [[4, 4], [(0, 183, 239)]], [[5, 4], [(0, 183, 239)]], [[6, 4], [(0, 183, 239)]], [[7, 4], [(0, 183, 239)]], [[8, 4], [(0, 183, 239)]], [[9, 4], [(0, 183, 239)]], [[10, 4], [(0, 183, 239)]], [[11, 4], [(237, 28, 36)]], [[12, 4], [(0, 183, 239)]], [[13, 4], [(0, 183, 239)]], [[14, 4], [(0, 183, 239)]], [[15, 4], [(0, 183, 239)]], [[0, 5], [(0, 183, 239)]], [[1, 5], [(0, 183, 239)]], [[2, 5], [(0, 183, 239)]], [[3, 5], [(237, 28, 36)]], [[4, 5], [(0, 183, 239)]], [[5, 5], [(0, 183, 239)]], [[6, 5], [(0, 183, 239)]], [[7, 5], [(0, 183, 239)]], [[8, 5], [(0, 183, 239)]], [[9, 5], [(0, 183, 239)]], [[10, 5], [(0, 183, 239)]], [[11, 5], [(237, 28, 36)]], [[12, 5], [(0, 183, 239)]], [[13, 5], [(0, 183, 239)]], [[14, 5], [(0, 183, 239)]], [[15, 5], [(0, 183, 239)]], [[0, 6], [(237, 28, 36)]], [[1, 6], [(237, 28, 36)]], [[2, 6], [(237, 28, 36)]], [[3, 6], [(237, 28, 36)]], [[4, 6], [(237, 28, 36)]], [[5, 6], [(237, 28, 36)]], [[6, 6], [(237, 28, 36)]], [[7, 6], [(237, 28, 36)]], [[8, 6], [(237, 28, 36)]], [[9, 6], [(237, 28, 36)]], [[10, 6], [(237, 28, 36)]], [[11, 6], [(237, 28, 36)]], [[12, 6], [(237, 28, 36)]], [[13, 6], [(237, 28, 36)]], [[14, 6], [(237, 28, 36)]], [[15, 6], [(237, 28, 36)]], [[0, 7], [(237, 28, 36)]], [[1, 7], [(0, 0, 0)]], [[2, 7], [(0, 0, 0)]], [[3, 7], [(237, 28, 36)]], [[4, 7], [(0, 0, 0)]], [[5, 7], [(0, 0, 0)]], [[6, 7], [(237, 28, 36)]], [[7, 7], [(237, 28, 36)]], [[8, 7], [(237, 28, 36)]], [[9, 7], [(0, 0, 0)]], [[10, 7], [(0, 0, 0)]], [[11, 7], [(237, 28, 36)]], [[12, 7], [(0, 0, 0)]], [[13, 7], [(0, 0, 0)]], [[14, 7], [(237, 28, 36)]], [[15, 7], [(237, 28, 36)]], [[0, 8], [(237, 28, 36)]], [[1, 8], [(237, 28, 36)]], [[2, 8], [(0, 0, 0)]], [[3, 8], [(237, 28, 36)]], [[4, 8], [(0, 0, 0)]], [[5, 8], [(237, 28, 36)]], [[6, 8], [(237, 28, 36)]], [[7, 8], [(0, 0, 0)]], [[8, 8], [(237, 28, 36)]], [[9, 8], [(237, 28, 36)]], [[10, 8], [(0, 0, 0)]], [[11, 8], [(237, 28, 36)]], [[12, 8], [(0, 0, 0)]], [[13, 8], [(237, 28, 36)]], [[14, 8], [(237, 28, 36)]], [[15, 8], [(0, 0, 0)]], [[0, 9], [(0, 0, 0)]], [[1, 9], [(237, 28, 36)]], [[2, 9], [(237, 28, 36)]], [[3, 9], [(237, 28, 36)]], [[4, 9], [(237, 28, 36)]], [[5, 9], [(237, 28, 36)]], [[6, 9], [(0, 0, 0)]], [[7, 9], [(0, 0, 0)]], [[8, 9], [(0, 0, 0)]], [[9, 9], [(237, 28, 36)]], [[10, 9], [(237, 28, 36)]], [[11, 9], [(237, 28, 36)]], [[12, 9], [(237, 28, 36)]], [[13, 9], [(237, 28, 36)]], [[14, 9], [(0, 0, 0)]], [[15, 9], [(0, 0, 0)]], [[0, 10], [(0, 0, 0)]], [[1, 10], [(0, 0, 0)]], [[2, 10], [(237, 28, 36)]], [[3, 10], [(237, 28, 36)]], [[4, 10], [(237, 28, 36)]], [[5, 10], [(0, 0, 0)]], [[6, 10], [(0, 0, 0)]], [[7, 10], [(0, 0, 0)]], [[8, 10], [(0, 0, 0)]], [[9, 10], [(0, 0, 0)]], [[10, 10], [(237, 28, 36)]], [[11, 10], [(237, 28, 36)]], [[12, 10], [(237, 28, 36)]], [[13, 10], [(0, 0, 0)]], [[14, 10], [(0, 0, 0)]], [[15, 10], [(0, 0, 0)]], [[0, 11], [(0, 0, 0)]], [[1, 11], [(0, 0, 0)]], [[2, 11], [(0, 0, 0)]], [[3, 11], [(255, 194, 14)]], [[4, 11], [(0, 0, 0)]], [[5, 11], [(0, 0, 0)]], [[6, 11], [(0, 0, 0)]], [[7, 11], [(0, 0, 0)]], [[8, 11], [(0, 0, 0)]], [[9, 11], [(0, 0, 0)]], [[10, 11], [(0, 0, 0)]], [[11, 11], [(255, 194, 14)]], [[12, 11], [(0, 0, 0)]], [[13, 11], [(0, 0, 0)]], [[14, 11], [(0, 0, 0)]], [[15, 11], [(0, 0, 0)]], [[0, 12], [(0, 0, 0)]], [[1, 12], [(0, 0, 0)]], [[2, 12], [(0, 0, 0)]], [[3, 12], [(0, 0, 0)]], [[4, 12], [(0, 0, 0)]], [[5, 12], [(0, 0, 0)]], [[6, 12], [(0, 0, 0)]], [[7, 12], [(0, 0, 0)]], [[8, 12], [(0, 0, 0)]], [[9, 12], [(0, 0, 0)]], [[10, 12], [(0, 0, 0)]], [[11, 12], [(0, 0, 0)]], [[12, 12], [(0, 0, 0)]], [[13, 12], [(0, 0, 0)]], [[14, 12], [(0, 0, 0)]], [[15, 12], [(0, 0, 0)]], [[0, 13], [(0, 0, 0)]], [[1, 13], [(0, 0, 0)]], [[2, 13], [(0, 0, 0)]], [[3, 13], [(0, 0, 0)]], [[4, 13], [(0, 0, 0)]], [[5, 13], [(0, 0, 0)]], [[6, 13], [(0, 0, 0)]], [[7, 13], [(0, 0, 0)]], [[8, 13], [(0, 0, 0)]], [[9, 13], [(0, 0, 0)]], [[10, 13], [(0, 0, 0)]], [[11, 13], [(0, 0, 0)]], [[12, 13], [(0, 0, 0)]], [[13, 13], [(0, 0, 0)]], [[14, 13], [(0, 0, 0)]], [[15, 13], [(0, 0, 0)]], [[0, 14], [(0, 0, 0)]], [[1, 14], [(0, 0, 0)]], [[2, 14], [(0, 0, 0)]], [[3, 14], [(0, 0, 0)]], [[4, 14], [(0, 0, 0)]], [[5, 14], [(0, 0, 0)]], [[6, 14], [(0, 0, 0)]], [[7, 14], [(0, 0, 0)]], [[8, 14], [(0, 0, 0)]], [[9, 14], [(0, 0, 0)]], [[10, 14], [(0, 0, 0)]], [[11, 14], [(0, 0, 0)]], [[12, 14], [(0, 0, 0)]], [[13, 14], [(0, 0, 0)]], [[14, 14], [(0, 0, 0)]], [[15, 14], [(0, 0, 0)]], [[0, 15], [(0, 0, 0)]], [[1, 15], [(0, 0, 0)]], [[2, 15], [(0, 0, 0)]], [[3, 15], [(0, 0, 0)]], [[4, 15], [(0, 0, 0)]], [[5, 15], [(0, 0, 0)]], [[6, 15], [(0, 0, 0)]], [[7, 15], [(0, 0, 0)]], [[8, 15], [(0, 0, 0)]], [[9, 15], [(0, 0, 0)]], [[10, 15], [(0, 0, 0)]], [[11, 15], [(0, 0, 0)]], [[12, 15], [(0, 0, 0)]], [[13, 15], [(0, 0, 0)]], [[14, 15], [(0, 0, 0)]], [[15, 15], [(0, 0, 0)]]]
# ppp = [[[0, 0], [(168, 230, 29)]], [[1, 0], [(168, 230, 29)]], [[2, 0], [(168, 230, 29)]], [[3, 0], [(168, 230, 29)]], [[4, 0], [(168, 230, 29)]], [[5, 0], [(168, 230, 29)]], [[6, 0], [(168, 230, 29)]], [[7, 0], [(168, 230, 29)]], [[8, 0], [(168, 230, 29)]], [[9, 0], [(168, 230, 29)]], [[10, 0], [(168, 230, 29)]], [[11, 0], [(168, 230, 29)]], [[12, 0], [(168, 230, 29)]], [[13, 0], [(168, 230, 29)]], [[14, 0], [(168, 230, 29)]], [[15, 0], [(168, 230, 29)]], [[0, 1], [(168, 230, 29)]], [[1, 1], [(168, 230, 29)]], [[2, 1], [(168, 230, 29)]], [[3, 1], [(168, 230, 29)]], [[4, 1], [(168, 230, 29)]], [[5, 1], [(168, 230, 29)]], [[6, 1], [(168, 230, 29)]], [[7, 1], [(168, 230, 29)]], [[8, 1], [(168, 230, 29)]], [[9, 1], [(168, 230, 29)]], [[10, 1], [(168, 230, 29)]], [[11, 1], [(168, 230, 29)]], [[12, 1], [(168, 230, 29)]], [[13, 1], [(168, 230, 29)]], [[14, 1], [(168, 230, 29)]], [[15, 1], [(168, 230, 29)]], [[0, 2], [(168, 230, 29)]], [[1, 2], [(168, 230, 29)]], [[2, 2], [(168, 230, 29)]], [[3, 2], [(168, 230, 29)]], [[4, 2], [(168, 230, 29)]], [[5, 2], [(168, 230, 29)]], [[6, 2], [(168, 230, 29)]], [[7, 2], [(168, 230, 29)]], [[8, 2], [(168, 230, 29)]], [[9, 2], [(168, 230, 29)]], [[10, 2], [(168, 230, 29)]], [[11, 2], [(156, 90, 60)]], [[12, 2], [(168, 230, 29)]], [[13, 2], [(168, 230, 29)]], [[14, 2], [(168, 230, 29)]], [[15, 2], [(168, 230, 29)]], [[0, 3], [(168, 230, 29)]], [[1, 3], [(168, 230, 29)]], [[2, 3], [(168, 230, 29)]], [[3, 3], [(168, 230, 29)]], [[4, 3], [(168, 230, 29)]], [[5, 3], [(168, 230, 29)]], [[6, 3], [(168, 230, 29)]], [[7, 3], [(168, 230, 29)]], [[8, 3], [(168, 230, 29)]], [[9, 3], [(168, 230, 29)]], [[10, 3], [(168, 230, 29)]], [[11, 3], [(156, 90, 60)]], [[12, 3], [(168, 230, 29)]], [[13, 3], [(168, 230, 29)]], [[14, 3], [(168, 230, 29)]], [[15, 3], [(168, 230, 29)]], [[0, 4], [(237, 28, 36)]], [[1, 4], [(255, 126, 0)]], [[2, 4], [(255, 194, 14)]], [[3, 4], [(255, 194, 14)]], [[4, 4], [(245, 228, 156)]], [[5, 4], [(245, 228, 156)]], [[6, 4], [(255, 249, 189)]], [[7, 4], [(255, 249, 189)]], [[8, 4], [(255, 249, 189)]], [[9, 4], [(153, 217, 234)]], [[10, 4], [(153, 217, 234)]], [[11, 4], [(156, 90, 60)]], [[12, 4], [(112, 154, 209)]], [[13, 4], [(77, 109, 243)]], [[14, 4], [(47, 54, 153)]], [[15, 4], [(84, 109, 142)]], [[0, 5], [(255, 126, 0)]], [[1, 5], [(255, 126, 0)]], [[2, 5], [(255, 194, 14)]], [[3, 5], [(255, 194, 14)]], [[4, 5], [(245, 228, 156)]], [[5, 5], [(245, 228, 156)]], [[6, 5], [(255, 249, 189)]], [[7, 5], [(255, 249, 189)]], [[8, 5], [(255, 249, 189)]], [[9, 5], [(153, 217, 234)]], [[10, 5], [(153, 217, 234)]], [[11, 5], [(156, 90, 60)]], [[12, 5], [(34, 177, 76)]], [[13, 5], [(77, 109, 243)]], [[14, 5], [(47, 54, 153)]], [[15, 5], [(84, 109, 142)]], [[0, 6], [(255, 194, 14)]], [[1, 6], [(255, 194, 14)]], [[2, 6], [(255, 194, 14)]], [[3, 6], [(255, 194, 14)]], [[4, 6], [(245, 228, 156)]], [[5, 6], [(245, 228, 156)]], [[6, 6], [(255, 249, 189)]], [[7, 6], [(255, 249, 189)]], [[8, 6], [(255, 249, 189)]], [[9, 6], [(153, 217, 234)]], [[10, 6], [(153, 217, 234)]], [[11, 6], [(156, 90, 60)]], [[12, 6], [(34, 177, 76)]], [[13, 6], [(34, 177, 76)]], [[14, 6], [(47, 54, 153)]], [[15, 6], [(84, 109, 142)]], [[0, 7], [(255, 194, 14)]], [[1, 7], [(255, 194, 14)]], [[2, 7], [(255, 194, 14)]], [[3, 7], [(255, 194, 14)]], [[4, 7], [(245, 228, 156)]], [[5, 7], [(245, 228, 156)]], [[6, 7], [(255, 249, 189)]], [[7, 7], [(255, 249, 189)]], [[8, 7], [(255, 249, 189)]], [[9, 7], [(153, 217, 234)]], [[10, 7], [(153, 217, 234)]], [[11, 7], [(156, 90, 60)]], [[12, 7], [(112, 154, 209)]], [[13, 7], [(34, 177, 76)]], [[14, 7], [(34, 177, 76)]], [[15, 7], [(84, 109, 142)]], [[0, 8], [(245, 228, 156)]], [[1, 8], [(245, 228, 156)]], [[2, 8], [(245, 228, 156)]], [[3, 8], [(245, 228, 156)]], [[4, 8], [(245, 228, 156)]], [[5, 8], [(245, 228, 156)]], [[6, 8], [(255, 249, 189)]], [[7, 8], [(255, 249, 189)]], [[8, 8], [(255, 249, 189)]], [[9, 8], [(153, 217, 234)]], [[10, 8], [(156, 90, 60)]], [[11, 8], [(156, 90, 60)]], [[12, 8], [(112, 154, 209)]], [[13, 8], [(77, 109, 243)]], [[14, 8], [(47, 54, 153)]], [[15, 8], [(84, 109, 142)]], [[0, 9], [(245, 228, 156)]], [[1, 9], [(245, 228, 156)]], [[2, 9], [(245, 228, 156)]], [[3, 9], [(245, 228, 156)]], [[4, 9], [(245, 228, 156)]], [[5, 9], [(245, 228, 156)]], [[6, 9], [(255, 249, 189)]], [[7, 9], [(255, 249, 189)]], [[8, 9], [(255, 249, 189)]], [[9, 9], [(34, 177, 76)]], [[10, 9], [(34, 177, 76)]], [[11, 9], [(156, 90, 60)]], [[12, 9], [(34, 177, 76)]], [[13, 9], [(34, 177, 76)]], [[14, 9], [(47, 54, 153)]], [[15, 9], [(84, 109, 142)]], [[0, 10], [(255, 249, 189)]], [[1, 10], [(255, 249, 189)]], [[2, 10], [(255, 249, 189)]], [[3, 10], [(255, 249, 189)]], [[4, 10], [(255, 249, 189)]], [[5, 10], [(255, 249, 189)]], [[6, 10], [(255, 249, 189)]], [[7, 10], [(34, 177, 76)]], [[8, 10], [(34, 177, 76)]], [[9, 10], [(34, 177, 76)]], [[10, 10], [(34, 177, 76)]], [[11, 10], [(156, 90, 60)]], [[12, 10], [(34, 177, 76)]], [[13, 10], [(34, 177, 76)]], [[14, 10], [(34, 177, 76)]], [[15, 10], [(84, 109, 142)]], [[0, 11], [(255, 249, 189)]], [[1, 11], [(255, 249, 189)]], [[2, 11], [(255, 249, 189)]], [[3, 11], [(255, 249, 189)]], [[4, 11], [(255, 249, 189)]], [[5, 11], [(255, 249, 189)]], [[6, 11], [(34, 177, 76)]], [[7, 11], [(34, 177, 76)]], [[8, 11], [(34, 177, 76)]], [[9, 11], [(34, 177, 76)]], [[10, 11], [(34, 177, 76)]], [[11, 11], [(156, 90, 60)]], [[12, 11], [(34, 177, 76)]], [[13, 11], [(34, 177, 76)]], [[14, 11], [(34, 177, 76)]], [[15, 11], [(34, 177, 76)]], [[0, 12], [(255, 249, 189)]], [[1, 12], [(255, 249, 189)]], [[2, 12], [(255, 249, 189)]], [[3, 12], [(255, 249, 189)]], [[4, 12], [(255, 249, 189)]], [[5, 12], [(34, 177, 76)]], [[6, 12], [(34, 177, 76)]], [[7, 12], [(34, 177, 76)]], [[8, 12], [(34, 177, 76)]], [[9, 12], [(34, 177, 76)]], [[10, 12], [(34, 177, 76)]], [[11, 12], [(156, 90, 60)]], [[12, 12], [(34, 177, 76)]], [[13, 12], [(34, 177, 76)]], [[14, 12], [(34, 177, 76)]], [[15, 12], [(34, 177, 76)]], [[0, 13], [(153, 217, 234)]], [[1, 13], [(153, 217, 234)]], [[2, 13], [(153, 217, 234)]], [[3, 13], [(153, 217, 234)]], [[4, 13], [(153, 217, 234)]], [[5, 13], [(34, 177, 76)]], [[6, 13], [(34, 177, 76)]], [[7, 13], [(34, 177, 76)]], [[8, 13], [(34, 177, 76)]], [[9, 13], [(34, 177, 76)]], [[10, 13], [(156, 90, 60)]], [[11, 13], [(156, 90, 60)]], [[12, 13], [(34, 177, 76)]], [[13, 13], [(34, 177, 76)]], [[14, 13], [(34, 177, 76)]], [[15, 13], [(34, 177, 76)]], [[0, 14], [(153, 217, 234)]], [[1, 14], [(153, 217, 234)]], [[2, 14], [(153, 217, 234)]], [[3, 14], [(153, 217, 234)]], [[4, 14], [(153, 217, 234)]], [[5, 14], [(34, 177, 76)]], [[6, 14], [(34, 177, 76)]], [[7, 14], [(34, 177, 76)]], [[8, 14], [(34, 177, 76)]], [[9, 14], [(34, 177, 76)]], [[10, 14], [(156, 90, 60)]], [[11, 14], [(34, 177, 76)]], [[12, 14], [(34, 177, 76)]], [[13, 14], [(34, 177, 76)]], [[14, 14], [(34, 177, 76)]], [[15, 14], [(34, 177, 76)]], [[0, 15], [(84, 109, 142)]], [[1, 15], [(84, 109, 142)]], [[2, 15], [(84, 109, 142)]], [[3, 15], [(84, 109, 142)]], [[4, 15], [(84, 109, 142)]], [[5, 15], [(34, 177, 76)]], [[6, 15], [(34, 177, 76)]], [[7, 15], [(34, 177, 76)]], [[8, 15], [(34, 177, 76)]], [[9, 15], [(34, 177, 76)]], [[10, 15], [(34, 177, 76)]], [[11, 15], [(34, 177, 76)]], [[12, 15], [(34, 177, 76)]], [[13, 15], [(34, 177, 76)]], [[14, 15], [(34, 177, 76)]], [[15, 15], [(34, 177, 76)]]]
ppp = [(77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (237, 28, 36), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (237, 28, 36), (77, 109, 243), (77, 109, 243), (77, 109, 243), (77, 109, 243), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (0, 0, 0), (237, 28, 36), (237, 28, 36), (0, 0, 0), (237, 28, 36), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (237, 28, 36), (0, 0, 0), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (237, 28, 36), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (237, 28, 36), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 242, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 242, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)]
ppp = [[[0, 0], [(77, 109, 243)]], [[1, 0], [(77, 109, 243)]], [[2, 0], [(77, 109, 243)]], [[3, 0], [(77, 109, 243)]], [[4, 0], [(77, 109, 243)]], [[5, 0], [(77, 109, 243)]], [[6, 0], [(77, 109, 243)]], [[7, 0], [(77, 109, 243)]], [[8, 0], [(77, 109, 243)]], [[9, 0], [(77, 109, 243)]], [[10, 0], [(77, 109, 243)]], [[11, 0], [(77, 109, 243)]], [[12, 0], [(77, 109, 243)]], [[13, 0], [(77, 109, 243)]], [[14, 0], [(77, 109, 243)]], [[15, 0], [(77, 109, 243)]], [[0, 1], [(77, 109, 243)]], [[1, 1], [(77, 109, 243)]], [[2, 1], [(77, 109, 243)]], [[3, 1], [(77, 109, 243)]], [[4, 1], [(237, 28, 36)]], [[5, 1], [(77, 109, 243)]], [[6, 1], [(77, 109, 243)]], [[7, 1], [(77, 109, 243)]], [[8, 1], [(77, 109, 243)]], [[9, 1], [(77, 109, 243)]], [[10, 1], [(77, 109, 243)]], [[11, 1], [(237, 28, 36)]], [[12, 1], [(77, 109, 243)]], [[13, 1], [(77, 109, 243)]], [[14, 1], [(77, 109, 243)]], [[15, 1], [(77, 109, 243)]], [[0, 2], [(0, 0, 0)]], [[1, 2], [(0, 0, 0)]], [[2, 2], [(0, 0, 0)]], [[3, 2], [(0, 0, 0)]], [[4, 2], [(237, 28, 36)]], [[5, 2], [(0, 0, 0)]], [[6, 2], [(0, 0, 0)]], [[7, 2], [(0, 0, 0)]], [[8, 2], [(0, 0, 0)]], [[9, 2], [(0, 0, 0)]], [[10, 2], [(0, 0, 0)]], [[11, 2], [(237, 28, 36)]], [[12, 2], [(0, 0, 0)]], [[13, 2], [(0, 0, 0)]], [[14, 2], [(0, 0, 0)]], [[15, 2], [(0, 0, 0)]], [[0, 3], [(237, 28, 36)]], [[1, 3], [(237, 28, 36)]], [[2, 3], [(237, 28, 36)]], [[3, 3], [(237, 28, 36)]], [[4, 3], [(237, 28, 36)]], [[5, 3], [(237, 28, 36)]], [[6, 3], [(237, 28, 36)]], [[7, 3], [(237, 28, 36)]], [[8, 3], [(237, 28, 36)]], [[9, 3], [(237, 28, 36)]], [[10, 3], [(237, 28, 36)]], [[11, 3], [(237, 28, 36)]], [[12, 3], [(237, 28, 36)]], [[13, 3], [(237, 28, 36)]], [[14, 3], [(237, 28, 36)]], [[15, 3], [(237, 28, 36)]], [[0, 4], [(237, 28, 36)]], [[1, 4], [(237, 28, 36)]], [[2, 4], [(0, 0, 0)]], [[3, 4], [(0, 0, 0)]], [[4, 4], [(237, 28, 36)]], [[5, 4], [(0, 0, 0)]], [[6, 4], [(0, 0, 0)]], [[7, 4], [(237, 28, 36)]], [[8, 4], [(237, 28, 36)]], [[9, 4], [(0, 0, 0)]], [[10, 4], [(0, 0, 0)]], [[11, 4], [(237, 28, 36)]], [[12, 4], [(0, 0, 0)]], [[13, 4], [(0, 0, 0)]], [[14, 4], [(237, 28, 36)]], [[15, 4], [(237, 28, 36)]], [[0, 5], [(0, 0, 0)]], [[1, 5], [(237, 28, 36)]], [[2, 5], [(237, 28, 36)]], [[3, 5], [(0, 0, 0)]], [[4, 5], [(237, 28, 36)]], [[5, 5], [(0, 0, 0)]], [[6, 5], [(237, 28, 36)]], [[7, 5], [(237, 28, 36)]], [[8, 5], [(237, 28, 36)]], [[9, 5], [(237, 28, 36)]], [[10, 5], [(0, 0, 0)]], [[11, 5], [(237, 28, 36)]], [[12, 5], [(0, 0, 0)]], [[13, 5], [(237, 28, 36)]], [[14, 5], [(237, 28, 36)]], [[15, 5], [(0, 0, 0)]], [[0, 6], [(0, 0, 0)]], [[1, 6], [(0, 0, 0)]], [[2, 6], [(237, 28, 36)]], [[3, 6], [(237, 28, 36)]], [[4, 6], [(237, 28, 36)]], [[5, 6], [(237, 28, 36)]], [[6, 6], [(237, 28, 36)]], [[7, 6], [(0, 0, 0)]], [[8, 6], [(0, 0, 0)]], [[9, 6], [(237, 28, 36)]], [[10, 6], [(237, 28, 36)]], [[11, 6], [(237, 28, 36)]], [[12, 6], [(237, 28, 36)]], [[13, 6], [(237, 28, 36)]], [[14, 6], [(0, 0, 0)]], [[15, 6], [(0, 0, 0)]], [[0, 7], [(0, 0, 0)]], [[1, 7], [(0, 0, 0)]], [[2, 7], [(0, 0, 0)]], [[3, 7], [(237, 28, 36)]], [[4, 7], [(237, 28, 36)]], [[5, 7], [(237, 28, 36)]], [[6, 7], [(0, 0, 0)]], [[7, 7], [(0, 0, 0)]], [[8, 7], [(0, 0, 0)]], [[9, 7], [(0, 0, 0)]], [[10, 7], [(237, 28, 36)]], [[11, 7], [(237, 28, 36)]], [[12, 7], [(237, 28, 36)]], [[13, 7], [(0, 0, 0)]], [[14, 7], [(0, 0, 0)]], [[15, 7], [(0, 0, 0)]], [[0, 8], [(0, 0, 0)]], [[1, 8], [(0, 0, 0)]], [[2, 8], [(0, 0, 0)]], [[3, 8], [(0, 0, 0)]], [[4, 8], [(237, 28, 36)]], [[5, 8], [(0, 0, 0)]], [[6, 8], [(0, 0, 0)]], [[7, 8], [(0, 0, 0)]], [[8, 8], [(0, 0, 0)]], [[9, 8], [(0, 0, 0)]], [[10, 8], [(0, 0, 0)]], [[11, 8], [(237, 28, 36)]], [[12, 8], [(0, 0, 0)]], [[13, 8], [(0, 0, 0)]], [[14, 8], [(0, 0, 0)]], [[15, 8], [(0, 0, 0)]], [[0, 9], [(0, 0, 0)]], [[1, 9], [(0, 0, 0)]], [[2, 9], [(0, 0, 0)]], [[3, 9], [(0, 0, 0)]], [[4, 9], [(255, 242, 0)]], [[5, 9], [(0, 0, 0)]], [[6, 9], [(0, 0, 0)]], [[7, 9], [(0, 0, 0)]], [[8, 9], [(0, 0, 0)]], [[9, 9], [(0, 0, 0)]], [[10, 9], [(0, 0, 0)]], [[11, 9], [(255, 242, 0)]], [[12, 9], [(0, 0, 0)]], [[13, 9], [(0, 0, 0)]], [[14, 9], [(0, 0, 0)]], [[15, 9], [(0, 0, 0)]], [[0, 10], [(0, 0, 0)]], [[1, 10], [(0, 0, 0)]], [[2, 10], [(0, 0, 0)]], [[3, 10], [(0, 0, 0)]], [[4, 10], [(0, 0, 0)]], [[5, 10], [(0, 0, 0)]], [[6, 10], [(0, 0, 0)]], [[7, 10], [(0, 0, 0)]], [[8, 10], [(0, 0, 0)]], [[9, 10], [(0, 0, 0)]], [[10, 10], [(0, 0, 0)]], [[11, 10], [(0, 0, 0)]], [[12, 10], [(0, 0, 0)]], [[13, 10], [(0, 0, 0)]], [[14, 10], [(0, 0, 0)]], [[15, 10], [(0, 0, 0)]], [[0, 11], [(0, 0, 0)]], [[1, 11], [(0, 0, 0)]], [[2, 11], [(0, 0, 0)]], [[3, 11], [(0, 0, 0)]], [[4, 11], [(0, 0, 0)]], [[5, 11], [(0, 0, 0)]], [[6, 11], [(0, 0, 0)]], [[7, 11], [(0, 0, 0)]], [[8, 11], [(0, 0, 0)]], [[9, 11], [(0, 0, 0)]], [[10, 11], [(0, 0, 0)]], [[11, 11], [(0, 0, 0)]], [[12, 11], [(0, 0, 0)]], [[13, 11], [(0, 0, 0)]], [[14, 11], [(0, 0, 0)]], [[15, 11], [(0, 0, 0)]], [[0, 12], [(0, 0, 0)]], [[1, 12], [(0, 0, 0)]], [[2, 12], [(0, 0, 0)]], [[3, 12], [(0, 0, 0)]], [[4, 12], [(0, 0, 0)]], [[5, 12], [(0, 0, 0)]], [[6, 12], [(0, 0, 0)]], [[7, 12], [(0, 0, 0)]], [[8, 12], [(0, 0, 0)]], [[9, 12], [(0, 0, 0)]], [[10, 12], [(0, 0, 0)]], [[11, 12], [(0, 0, 0)]], [[12, 12], [(0, 0, 0)]], [[13, 12], [(0, 0, 0)]], [[14, 12], [(0, 0, 0)]], [[15, 12], [(0, 0, 0)]], [[0, 13], [(0, 0, 0)]], [[1, 13], [(0, 0, 0)]], [[2, 13], [(0, 0, 0)]], [[3, 13], [(0, 0, 0)]], [[4, 13], [(0, 0, 0)]], [[5, 13], [(0, 0, 0)]], [[6, 13], [(0, 0, 0)]], [[7, 13], [(0, 0, 0)]], [[8, 13], [(0, 0, 0)]], [[9, 13], [(0, 0, 0)]], [[10, 13], [(0, 0, 0)]], [[11, 13], [(0, 0, 0)]], [[12, 13], [(0, 0, 0)]], [[13, 13], [(0, 0, 0)]], [[14, 13], [(0, 0, 0)]], [[15, 13], [(0, 0, 0)]], [[0, 14], [(0, 0, 0)]], [[1, 14], [(0, 0, 0)]], [[2, 14], [(0, 0, 0)]], [[3, 14], [(0, 0, 0)]], [[4, 14], [(0, 0, 0)]], [[5, 14], [(0, 0, 0)]], [[6, 14], [(0, 0, 0)]], [[7, 14], [(0, 0, 0)]], [[8, 14], [(0, 0, 0)]], [[9, 14], [(0, 0, 0)]], [[10, 14], [(0, 0, 0)]], [[11, 14], [(0, 0, 0)]], [[12, 14], [(0, 0, 0)]], [[13, 14], [(0, 0, 0)]], [[14, 14], [(0, 0, 0)]], [[15, 14], [(0, 0, 0)]], [[0, 15], [(0, 0, 0)]], [[1, 15], [(0, 0, 0)]], [[2, 15], [(0, 0, 0)]], [[3, 15], [(0, 0, 0)]], [[4, 15], [(0, 0, 0)]], [[5, 15], [(0, 0, 0)]], [[6, 15], [(0, 0, 0)]], [[7, 15], [(0, 0, 0)]], [[8, 15], [(0, 0, 0)]], [[9, 15], [(0, 0, 0)]], [[10, 15], [(0, 0, 0)]], [[11, 15], [(0, 0, 0)]], [[12, 15], [(0, 0, 0)]], [[13, 15], [(0, 0, 0)]], [[14, 15], [(0, 0, 0)]], [[15, 15], [(0, 0, 0)]]]
# ppp = [[[0, 0], [(0, 0, 0)]], [[1, 0], [(0, 0, 0)]], [[2, 0], [(0, 0, 0)]], [[3, 0], [(0, 0, 0)]], [[4, 0], [(0, 0, 0)]], [[5, 0], [(0, 0, 0)]], [[6, 0], [(0, 0, 0)]], [[7, 0], [(0, 0, 0)]], [[8, 0], [(0, 0, 0)]], [[9, 0], [(0, 0, 0)]], [[10, 0], [(0, 0, 0)]], [[11, 0], [(0, 0, 0)]], [[12, 0], [(0, 0, 0)]], [[13, 0], [(0, 0, 0)]], [[14, 0], [(0, 0, 0)]], [[15, 0], [(0, 0, 0)]], [[0, 1], [(0, 0, 0)]], [[1, 1], [(0, 0, 0)]], [[2, 1], [(0, 0, 0)]], [[3, 1], [(0, 0, 0)]], [[4, 1], [(0, 0, 0)]], [[5, 1], [(0, 0, 0)]], [[6, 1], [(0, 0, 0)]], [[7, 1], [(0, 0, 0)]], [[8, 1], [(0, 0, 0)]], [[9, 1], [(0, 0, 0)]], [[10, 1], [(0, 0, 0)]], [[11, 1], [(0, 0, 0)]], [[12, 1], [(0, 0, 0)]], [[13, 1], [(0, 0, 0)]], [[14, 1], [(0, 0, 0)]], [[15, 1], [(0, 0, 0)]], [[0, 2], [(0, 0, 0)]], [[1, 2], [(0, 0, 0)]], [[2, 2], [(0, 0, 0)]], [[3, 2], [(0, 0, 0)]], [[4, 2], [(34, 177, 76)]], [[5, 2], [(0, 0, 0)]], [[6, 2], [(0, 0, 0)]], [[7, 2], [(0, 0, 0)]], [[8, 2], [(0, 0, 0)]], [[9, 2], [(0, 0, 0)]], [[10, 2], [(0, 0, 0)]], [[11, 2], [(168, 230, 29)]], [[12, 2], [(0, 0, 0)]], [[13, 2], [(0, 0, 0)]], [[14, 2], [(0, 0, 0)]], [[15, 2], [(0, 0, 0)]], [[0, 3], [(0, 0, 0)]], [[1, 3], [(0, 0, 0)]], [[2, 3], [(0, 0, 0)]], [[3, 3], [(0, 0, 0)]], [[4, 3], [(34, 177, 76)]], [[5, 3], [(0, 0, 0)]], [[6, 3], [(0, 0, 0)]], [[7, 3], [(0, 0, 0)]], [[8, 3], [(0, 0, 0)]], [[9, 3], [(0, 0, 0)]], [[10, 3], [(0, 0, 0)]], [[11, 3], [(168, 230, 29)]], [[12, 3], [(34, 177, 76)]], [[13, 3], [(0, 0, 0)]], [[14, 3], [(0, 0, 0)]], [[15, 3], [(0, 0, 0)]], [[0, 4], [(0, 0, 0)]], [[1, 4], [(0, 0, 0)]], [[2, 4], [(0, 0, 0)]], [[3, 4], [(0, 0, 0)]], [[4, 4], [(34, 177, 76)]], [[5, 4], [(168, 230, 29)]], [[6, 4], [(0, 0, 0)]], [[7, 4], [(0, 0, 0)]], [[8, 4], [(0, 0, 0)]], [[9, 4], [(0, 0, 0)]], [[10, 4], [(34, 177, 76)]], [[11, 4], [(168, 230, 29)]], [[12, 4], [(0, 0, 0)]], [[13, 4], [(34, 177, 76)]], [[14, 4], [(0, 0, 0)]], [[15, 4], [(0, 0, 0)]], [[0, 5], [(0, 0, 0)]], [[1, 5], [(0, 0, 0)]], [[2, 5], [(0, 0, 0)]], [[3, 5], [(0, 0, 0)]], [[4, 5], [(34, 177, 76)]], [[5, 5], [(0, 0, 0)]], [[6, 5], [(168, 230, 29)]], [[7, 5], [(0, 0, 0)]], [[8, 5], [(0, 0, 0)]], [[9, 5], [(34, 177, 76)]], [[10, 5], [(0, 0, 0)]], [[11, 5], [(168, 230, 29)]], [[12, 5], [(0, 0, 0)]], [[13, 5], [(0, 0, 0)]], [[14, 5], [(0, 0, 0)]], [[15, 5], [(0, 0, 0)]], [[0, 6], [(0, 0, 0)]], [[1, 6], [(0, 0, 0)]], [[2, 6], [(0, 0, 0)]], [[3, 6], [(168, 230, 29)]], [[4, 6], [(34, 177, 76)]], [[5, 6], [(0, 0, 0)]], [[6, 6], [(0, 0, 0)]], [[7, 6], [(0, 0, 0)]], [[8, 6], [(0, 0, 0)]], [[9, 6], [(0, 0, 0)]], [[10, 6], [(255, 163, 177)]], [[11, 6], [(245, 228, 156)]], [[12, 6], [(255, 163, 177)]], [[13, 6], [(0, 0, 0)]], [[14, 6], [(0, 0, 0)]], [[15, 6], [(0, 0, 0)]], [[0, 7], [(0, 0, 0)]], [[1, 7], [(0, 0, 0)]], [[2, 7], [(168, 230, 29)]], [[3, 7], [(0, 0, 0)]], [[4, 7], [(34, 177, 76)]], [[5, 7], [(0, 0, 0)]], [[6, 7], [(0, 0, 0)]], [[7, 7], [(0, 0, 0)]], [[8, 7], [(0, 0, 0)]], [[9, 7], [(255, 163, 177)]], [[10, 7], [(245, 228, 156)]], [[11, 7], [(255, 194, 14)]], [[12, 7], [(245, 228, 156)]], [[13, 7], [(255, 163, 177)]], [[14, 7], [(0, 0, 0)]], [[15, 7], [(0, 0, 0)]], [[0, 8], [(0, 0, 0)]], [[1, 8], [(0, 0, 0)]], [[2, 8], [(0, 0, 0)]], [[3, 8], [(0, 0, 0)]], [[4, 8], [(34, 177, 76)]], [[5, 8], [(0, 0, 0)]], [[6, 8], [(0, 0, 0)]], [[7, 8], [(0, 0, 0)]], [[8, 8], [(0, 0, 0)]], [[9, 8], [(245, 228, 156)]], [[10, 8], [(255, 194, 14)]], [[11, 8], [(255, 126, 0)]], [[12, 8], [(255, 194, 14)]], [[13, 8], [(245, 228, 156)]], [[14, 8], [(0, 0, 0)]], [[15, 8], [(0, 0, 0)]], [[0, 9], [(0, 0, 0)]], [[1, 9], [(0, 0, 0)]], [[2, 9], [(0, 0, 0)]], [[3, 9], [(153, 0, 48)]], [[4, 9], [(237, 28, 36)]], [[5, 9], [(153, 0, 48)]], [[6, 9], [(0, 0, 0)]], [[7, 9], [(0, 0, 0)]], [[8, 9], [(0, 0, 0)]], [[9, 9], [(255, 163, 177)]], [[10, 9], [(245, 228, 156)]], [[11, 9], [(255, 194, 14)]], [[12, 9], [(245, 228, 156)]], [[13, 9], [(255, 163, 177)]], [[14, 9], [(0, 0, 0)]], [[15, 9], [(0, 0, 0)]], [[0, 10], [(0, 0, 0)]], [[1, 10], [(0, 0, 0)]], [[2, 10], [(153, 0, 48)]], [[3, 10], [(237, 28, 36)]], [[4, 10], [(255, 163, 177)]], [[5, 10], [(237, 28, 36)]], [[6, 10], [(153, 0, 48)]], [[7, 10], [(0, 0, 0)]], [[8, 10], [(0, 0, 0)]], [[9, 10], [(0, 0, 0)]], [[10, 10], [(255, 163, 177)]], [[11, 10], [(245, 228, 156)]], [[12, 10], [(255, 163, 177)]], [[13, 10], [(0, 0, 0)]], [[14, 10], [(0, 0, 0)]], [[15, 10], [(0, 0, 0)]], [[0, 11], [(0, 0, 0)]], [[1, 11], [(0, 0, 0)]], [[2, 11], [(237, 28, 36)]], [[3, 11], [(255, 163, 177)]], [[4, 11], [(245, 228, 156)]], [[5, 11], [(255, 163, 177)]], [[6, 11], [(237, 28, 36)]], [[7, 11], [(0, 0, 0)]], [[8, 11], [(0, 0, 0)]], [[9, 11], [(0, 0, 0)]], [[10, 11], [(0, 0, 0)]], [[11, 11], [(0, 0, 0)]], [[12, 11], [(0, 0, 0)]], [[13, 11], [(0, 0, 0)]], [[14, 11], [(0, 0, 0)]], [[15, 11], [(0, 0, 0)]], [[0, 12], [(0, 0, 0)]], [[1, 12], [(0, 0, 0)]], [[2, 12], [(153, 0, 48)]], [[3, 12], [(237, 28, 36)]], [[4, 12], [(255, 163, 177)]], [[5, 12], [(237, 28, 36)]], [[6, 12], [(153, 0, 48)]], [[7, 12], [(0, 0, 0)]], [[8, 12], [(0, 0, 0)]], [[9, 12], [(0, 0, 0)]], [[10, 12], [(0, 0, 0)]], [[11, 12], [(0, 0, 0)]], [[12, 12], [(0, 0, 0)]], [[13, 12], [(0, 0, 0)]], [[14, 12], [(0, 0, 0)]], [[15, 12], [(0, 0, 0)]], [[0, 13], [(0, 0, 0)]], [[1, 13], [(0, 0, 0)]], [[2, 13], [(0, 0, 0)]], [[3, 13], [(153, 0, 48)]], [[4, 13], [(237, 28, 36)]], [[5, 13], [(153, 0, 48)]], [[6, 13], [(0, 0, 0)]], [[7, 13], [(0, 0, 0)]], [[8, 13], [(0, 0, 0)]], [[9, 13], [(0, 0, 0)]], [[10, 13], [(0, 0, 0)]], [[11, 13], [(0, 0, 0)]], [[12, 13], [(0, 0, 0)]], [[13, 13], [(0, 0, 0)]], [[14, 13], [(0, 0, 0)]], [[15, 13], [(0, 0, 0)]], [[0, 14], [(0, 0, 0)]], [[1, 14], [(0, 0, 0)]], [[2, 14], [(0, 0, 0)]], [[3, 14], [(0, 0, 0)]], [[4, 14], [(0, 0, 0)]], [[5, 14], [(0, 0, 0)]], [[6, 14], [(0, 0, 0)]], [[7, 14], [(0, 0, 0)]], [[8, 14], [(0, 0, 0)]], [[9, 14], [(0, 0, 0)]], [[10, 14], [(0, 0, 0)]], [[11, 14], [(0, 0, 0)]], [[12, 14], [(0, 0, 0)]], [[13, 14], [(0, 0, 0)]], [[14, 14], [(0, 0, 0)]], [[15, 14], [(0, 0, 0)]], [[0, 15], [(0, 0, 0)]], [[1, 15], [(0, 0, 0)]], [[2, 15], [(0, 0, 0)]], [[3, 15], [(0, 0, 0)]], [[4, 15], [(0, 0, 0)]], [[5, 15], [(0, 0, 0)]], [[6, 15], [(0, 0, 0)]], [[7, 15], [(0, 0, 0)]], [[8, 15], [(0, 0, 0)]], [[9, 15], [(0, 0, 0)]], [[10, 15], [(0, 0, 0)]], [[11, 15], [(0, 0, 0)]], [[12, 15], [(0, 0, 0)]], [[13, 15], [(0, 0, 0)]], [[14, 15], [(0, 0, 0)]], [[15, 15], [(0, 0, 0)]]]

bm
# bm

for p in ppp:
    pix = mat.xy_mat(p[0][0], p[0][1])
    # print(p[1])
    led_strip.strip[pix] = p[1][0]
led_strip.strip.show()

# time.sleep(1000*60)

# ------------------------------------------------------
# encoder setups
class Encoder:
    def __init__(self, desc, pin1, pin2, pin_push):
        self.desc = desc
        self.enc = rotaryio.IncrementalEncoder(pin1, pin2)
        self.enc.position = 0
        self.push = DigitalInOut(pin_push)
        self.push.direction = Direction.INPUT
        self.push.pull = Pull.UP
        self.value = 0
        self.pressed = False
        self.held = False
        self.ptime = 0

    def read(self):
        # push button pressed
        if not self.push.value:
            if not self.pressed:
                print(f"{self.desc}: pushed")
                self.pressed = True
                self.ptime = time.time()
            else:
                htime = time.time() - self.ptime
                if htime > 0.5 and not self.held:
                    print(f"{self.desc}: held")
                    self.held = True
        else:
            self.held = False
            self.pressed = False
        if self.enc.position != self.value:
            print(f"{self.desc}: {self.enc.position}")
            self.value = self.enc.position

    def read_delta(self):
        t_delta = self.enc.position - self.value
        self.value = self.enc.position
        if t_delta > 5 or t_delta < -5:
            t_delta = t_delta * 60
        return t_delta


enc_1 = Encoder("1", board.GP2, board.GP1, board.GP0)
enc_2 = Encoder("2", board.GP5, board.GP4, board.GP3)